name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          mkdir -p dist

          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/filemirror-linux-amd64 ./cmd/filemirror
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/fmr-linux-amd64 ./cmd/fmr

          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/filemirror-linux-arm64 ./cmd/filemirror
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/fmr-linux-arm64 ./cmd/fmr

          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/filemirror-darwin-amd64 ./cmd/filemirror
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/fmr-darwin-amd64 ./cmd/fmr

          # macOS ARM64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/filemirror-darwin-arm64 ./cmd/filemirror
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/fmr-darwin-arm64 ./cmd/fmr

          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/filemirror-windows-amd64.exe ./cmd/filemirror
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X github.com/jesperronn/filemirror.Version=${{ steps.get_version.outputs.VERSION }}" -o dist/fmr-windows-amd64.exe ./cmd/fmr

      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Generate release notes
        id: release_notes
        run: |
          # Get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s" --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges | head -20)
          fi

          cat > release_notes.md <<EOF
          ## What's Changed

          ${CHANGELOG}

          ## Installation

          ### Using go install
          \`\`\`bash
          # Install the filemirror binary
          go install github.com/jesperronn/filemirror/cmd/filemirror@${{ steps.get_version.outputs.VERSION }}
          
          # Or install the shorter fmr alias
          go install github.com/jesperronn/filemirror/cmd/fmr@${{ steps.get_version.outputs.VERSION }}
          \`\`\`

          ### Download binary
          Download the appropriate binary for your platform from the assets below.
          Both \`filemirror\` and \`fmr\` binaries are provided - they are identical in functionality.

          **Linux**:
          \`\`\`bash
          # Download fmr (shorter name)
          curl -LO https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/fmr-linux-amd64
          chmod +x fmr-linux-amd64
          sudo mv fmr-linux-amd64 /usr/local/bin/fmr
          
          # Or download filemirror
          curl -LO https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/filemirror-linux-amd64
          chmod +x filemirror-linux-amd64
          sudo mv filemirror-linux-amd64 /usr/local/bin/filemirror
          \`\`\`

          **macOS** (Intel):
          \`\`\`bash
          # Download fmr (shorter name)
          curl -LO https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/fmr-darwin-amd64
          chmod +x fmr-darwin-amd64
          sudo mv fmr-darwin-amd64 /usr/local/bin/fmr
          
          # Or download filemirror
          curl -LO https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/filemirror-darwin-amd64
          chmod +x filemirror-darwin-amd64
          sudo mv filemirror-darwin-amd64 /usr/local/bin/filemirror
          \`\`\`

          **macOS** (Apple Silicon):
          \`\`\`bash
          # Download fmr (shorter name)
          curl -LO https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/fmr-darwin-arm64
          chmod +x fmr-darwin-arm64
          sudo mv fmr-darwin-arm64 /usr/local/bin/fmr
          
          # Or download filemirror
          curl -LO https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/filemirror-darwin-arm64
          chmod +x filemirror-darwin-arm64
          sudo mv filemirror-darwin-arm64 /usr/local/bin/filemirror
          \`\`\`

          **Windows** (PowerShell):
          \`\`\`powershell
          # Download fmr (shorter name)
          Invoke-WebRequest -Uri "https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/fmr-windows-amd64.exe" -OutFile "fmr.exe"
          
          # Or download filemirror
          Invoke-WebRequest -Uri "https://github.com/jesperronn/filemirror/releases/download/${{ steps.get_version.outputs.VERSION }}/filemirror-windows-amd64.exe" -OutFile "filemirror.exe"
          \`\`\`

          ## Checksums

          See \`checksums.txt\` for SHA256 checksums of all binaries.
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: release_notes.md
          files: |
            dist/filemirror-linux-amd64
            dist/filemirror-linux-arm64
            dist/filemirror-darwin-amd64
            dist/filemirror-darwin-arm64
            dist/filemirror-windows-amd64.exe
            dist/fmr-linux-amd64
            dist/fmr-linux-arm64
            dist/fmr-darwin-amd64
            dist/fmr-darwin-arm64
            dist/fmr-windows-amd64.exe
            dist/checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
